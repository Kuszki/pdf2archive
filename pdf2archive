#!/bin/bash

source $(dirname $0)/pdf2common

VERSION="0.3.3"
CPOLICY=1
DEBUG=false
DIRMADE=false
UPOLICY="skip"

#=====# CHECKS #=====#
if [ "$(which gs)" == "" ]; then
	echo "ERROR: Ghostscript is not installed or it's not in the path"
	exit
fi

#=====# INPUT PARSER #=====#
if [ "$1" == "" ]; then
	exit
fi
while [ "$1" != "" ]; do
	PARAM=`echo $1 | awk -F= '{print $1}'`
	VALUE=`echo $1 | awk -F= '{print $2}'`
	case $PARAM in
		-h | --help)
			echo -e "\\nVisit project repo: https://github.com/Kuszki/pdf2archive\\n"
			exit
			;;
		-v | --version)
			echo $VERSION
			exit
			;;
		--debug)
			DEBUG=true
			MSGOPTS=""
			;;
		--cleanmetadata)
			PDFTITLE=""
			PDFAUTHOR=""
			PDFSUBJECT=""
			PDFKEYWORDS=""
			PDFCREATOR=""
			;;
		--title)
			PDFTITLE=$VALUE
			;;
		--author)
			PDFAUTHOR=$VALUE
			;;
		--subject)
			PDFSUBJECT=$VALUE
			;;
		--keywords)
			PDFKEYWORDS=$VALUE
			;;
		--creator)
			PDFCREATOR=$VALUE
			;;
		--good)
			DONE_FILE=$VALUE
			;;
		--bad)
			BAD_FILE=$VALUE
			;;
		--pass)
			PASS_FILE=$VALUE
			;;
		--cpolicy)
			CPOLICY=$VALUE
			;;
		--validate)
			VALIDATE=$VALUE
			;;
		--upolicy)
			UPOLICY=$VALUE
			;;
		--mark)
			WATERMARK=$VALUE
			;;
		--quality)
			if [ "$VALUE" == "high" ]; then
				QUALITYOPTS="-dPDFSETTINGS=/printer"
			elif [ "$VALUE" == "medium" ]; then
				QUALITYOPTS="-dPDFSETTINGS=/ebook"
			elif [ "$VALUE" == "low" ]; then
				QUALITYOPTS="-dPDFSETTINGS=/screen"
			else
				echo "ERROR: unknown quality option '$VALUE'"
				exit 1
			fi
			;;
		*.pdf)
			if [ "$INPUT" == "" ]; then
				INPUT=$PARAM
			elif [ "$OUTPUT" == "" ]; then
				OUTPUT=$PARAM
			else
				echo "ERROR: too many PDF files as input!"
				exit 1
			fi
			;;
		*)
			echo "ERROR: unknown parameter \"$PARAM\""
			exit 1
			;;
	esac
	shift
done

#=====# SET UP ALL THE STUFF #=====#

if [ "$OUTPUT" == "" ]; then
	OUTPUT="${INPUT%.pdf}-PDFA.pdf"
fi

OUTDIR=$(dirname "${OUTPUT}")
INFILE=$(basename "${INPUT}")

if [ ! -f "$INPUT" ]; then

	log_pass
	exit 1

fi

if [ -f "$OUTPUT" ]; then

	[ "$UPOLICY" == "skip" ] && exit 0
	[ "$UPOLICY" == "overwrite" ] && rm "$OUTPUT"

fi

#=====# FILE NAMES #=====#

TMPDIR=$(mktemp -d -p /dev/shm/ XXXXXXXXXXXX.dir)

TMPOUTPUT=$TMPDIR/out.pdf
TMPFILE=$TMPDIR/tmp.tmp

PSTMPFILE=$TMPDIR/PDFA_def.ps
ICCTMPFILE=$TMPDIR/AdobeRGB1998.icc
MARKTMPFILE=$TMPDIR/mark.ps

#=====# COLLECT METADATA #=====#

METADUMP=$(pdfinfo "$INPUT")

[ -z ${PDFTITLE+x} ] && PDFTITLE=$(echo "$METADUMP" | grep "^Title:" | sed "s/^Title:\\s*//")
[ -z ${PDFAUTHOR+x} ] && PDFAUTHOR=$(echo "$METADUMP" | grep "^Author:" | sed "s/^Author:\\s*//")
[ -z ${PDFSUBJECT+x} ] && PDFSUBJECT=$(echo "$METADUMP" | grep "^Subject:" | sed "s/^Subject:\\s*//")
[ -z ${PDFKEYWORDS+x} ] && PDFKEYWORDS=$(echo "$METADUMP" | grep "^Keywords:" | sed "s/^Keywords:\\s*//")
[ -z ${PDFCREATOR+x} ] && PDFCREATOR=$(echo "$METADUMP" | grep "^Creator:" | sed "s/^Creator:\\s*//")

#=====# PRINT DEBUG INFO #=====#

if $DEBUG; then
	echo "  DEBUG: running PDF2ARCHIVE, version $VERSION"
	echo "  DEBUG: using Ghostscript binary at $(which gs), version $(gs --version)"
	echo "  DEBUG: the input file is '$INPUT'"
	echo "  DEBUG: the output file is '$OUTPUT'"
	echo "  DEBUG: the intermediate processing file is $TMPFILE"
	echo "  DEBUG: the temporary directory is $TMPDIR"
	echo "  DEBUG: the current quality options are '$QUALITYOPTS'"
	echo "  DEBUG: PDF title '$PDFTITLE'"
	echo "  DEBUG: PDF author '$PDFAUTHOR'"
	echo "  DEBUG: PDF subject '$PDFSUBJECT'"
	echo "  DEBUG: PDF keywords '$PDFKEYWORDS'"
	echo "  DEBUG: PDF watermark '$WATERMARK'"
	echo "  DEBUG: PDF creator '$PDFCREATOR'"
fi

#=====# CREATE THE PS DEFINITION FILE #=====#

echo "%% ICCProfile file
/ICCProfile ($ICCTMPFILE)
def
[ /Title (Document)

/DOCINFO pdfmark
[/_objdef {icc_PDFA} /type /stream /OBJ pdfmark
[{icc_PDFA} <</N systemdict /ProcessColorModel get /DeviceGray eq {1} {systemdict /ProcessColorModel get /DeviceRGB eq {3} {4} ifelse} ifelse >> /PUT pdfmark
[{icc_PDFA} ICCProfile (r) file /PUT pdfmark
[/_objdef {OutputIntent_PDFA} /type /dict /OBJ pdfmark
[{OutputIntent_PDFA} <<
	/Type /OutputIntent
	/S /GTS_PDFA1
	/DestOutputProfile {icc_PDFA}
	/OutputConditionIdentifier (AdobeRGB1998)
>> /PUT pdfmark
[{Catalog} <</OutputIntents [ {OutputIntent_PDFA} ]>> /PUT pdfmark" > $PSTMPFILE

#=====# CREATE THE COLOR PROFILE FILE #=====#

echo -n -e "\\x00\\x00\\x02\\x30\\x41\\x44\\x42\\x45\\x02\\x10\\x00\\x00\\x6d\\x6e\\x74\\x72\\x52\\x47\\x42\\x20\\x58\\x59\\x5a\\x20\\x07\\xd0\\x00\\x08\\x00\\x0b\\x00\\x13\\x00\\x33\\x00\\x3b\\x61\\x63\\x73\\x70\\x41\\x50\\x50\\x4c\\x00\\x00\\x00\\x00\\x6e\\x6f\\x6e\\x65\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xf6\\xd6\\x00\\x01\\x00\\x00\\x00\\x00\\xd3\\x2d\\x41\\x44\\x42\\x45\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0a\\x63\\x70\\x72\\x74\\x00\\x00\\x00\\xfc\\x00\\x00\\x00\\x32\\x64\\x65\\x73\\x63\\x00\\x00\\x01\\x30\\x00\\x00\\x00\\x6b\\x77\\x74\\x70\\x74\\x00\\x00\\x01\\x9c\\x00\\x00\\x00\\x14\\x62\\x6b\\x70\\x74\\x00\\x00\\x01\\xb0\\x00\\x00\\x00\\x14\\x72\\x54\\x52\\x43\\x00\\x00\\x01\\xc4\\x00\\x00\\x00\\x0e\\x67\\x54\\x52\\x43\\x00\\x00\\x01\\xd4\\x00\\x00\\x00\\x0e\\x62\\x54\\x52\\x43\\x00\\x00\\x01\\xe4\\x00\\x00\\x00\\x0e\\x72\\x58\\x59\\x5a\\x00\\x00\\x01\\xf4\\x00\\x00\\x00\\x14\\x67\\x58\\x59\\x5a\\x00\\x00\\x02\\x08\\x00\\x00\\x00\\x14\\x62\\x58\\x59\\x5a\\x00\\x00\\x02\\x1c\\x00\\x00\\x00\\x14\\x74\\x65\\x78\\x74\\x00\\x00\\x00\\x00\\x43\\x6f\\x70\\x79\\x72\\x69\\x67\\x68\\x74\\x20\\x32\\x30\\x30\\x30\\x20\\x41\\x64\\x6f\\x62\\x65\\x20\\x53\\x79\\x73\\x74\\x65\\x6d\\x73\\x20\\x49\\x6e\\x63\\x6f\\x72\\x70\\x6f\\x72\\x61\\x74\\x65\\x64\\x00\\x00\\x00\\x64\\x65\\x73\\x63\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x11\\x41\\x64\\x6f\\x62\\x65\\x20\\x52\\x47\\x42\\x20\\x28\\x31\\x39\\x39\\x38\\x29\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x58\\x59\\x5a\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\xf3\\x51\\x00\\x01\\x00\\x00\\x00\\x01\\x16\\xcc\\x58\\x59\\x5a\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x63\\x75\\x72\\x76\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x33\\x00\\x00\\x63\\x75\\x72\\x76\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x33\\x00\\x00\\x63\\x75\\x72\\x76\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x33\\x00\\x00\\x58\\x59\\x5a\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x9c\\x18\\x00\\x00\\x4f\\xa5\\x00\\x00\\x04\\xfc\\x58\\x59\\x5a\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x34\\x8d\\x00\\x00\\xa0\\x2c\\x00\\x00\\x0f\\x95\\x58\\x59\\x5a\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x26\\x31\\x00\\x00\\x10\\x2f\\x00\\x00\\xbe\\x9c" > $ICCTMPFILE

#=====# CREATE THE WATERMARK PROFILE FILE #=====#

echo "%% Watermark ps file
/watermarkText { ($WATERMARK) } def
/watermarkFont { /TimesNewRomanBold 20 selectfont } def
/watermarkColor { 1 0 0 setrgbcolor } def
/watermarkAlpha { 0.5 .setfillconstantalpha } def
/watermarkAngle { 0 } def

/pageWidth { currentpagedevice /PageSize get 0 get } def
/pageHeight { currentpagedevice /PageSize get 1 get } def

<<
	/EndPage
	{
		2 eq { pop false }
		{
			gsave
			watermarkFont
			watermarkColor
			watermarkAlpha

			pageWidth pageHeight translate
			0 0 moveto
			watermarkText false charpath flattenpath pathbbox
			4 2 roll pop pop
			-5 -5 moveto

			watermarkAngle rotate
			-1 mul exch -1 mul exch
			rmoveto

			watermarkText show

			grestore
			true
		} ifelse
	} bind
>> setpagedevice" > $MARKTMPFILE

#=====# DO THE ACTUAL CONVERSION #=====#

[ "$WATERMARK" == "" ] && MARKTMPFILE=""

if [ ! -d "$OUTDIR" ]; then
	mkdir -p "$OUTDIR" && DIRMADE=true

	if [ $? != 0 ]; then
		log_bad

		rm -R "$TMPDIR"
		exit 1
	fi
fi

run gs $MSGOPTS \
	-dBATCH -dNOPAUSE -dNOOUTERSAVE -dALLOWPSTRANSPARENCY \
	-dEmbedAllFonts=true -dSubsetFonts=true \
	-dCompressFonts=true -dCompressPages=true \
	-sColorConversionStrategy=RGB \
	-dDownsampleMonoImages=false \
	-dDownsampleGrayImages=false \
	-dDownsampleColorImages=false \
	-dAutoFilterColorImages=false \
	-dAutoFilterGrayImages=false \
	-sDEVICE=pdfwrite \
	-sOutputFile="$TMPFILE" $MARKTMPFILE "$INPUT" && \
run gs $MSGOPTS \
	-dPDFA=3 -dBATCH -dNOPAUSE -dNOOUTERSAVE $QUALITYOPTS \
	-dPDFACompatibilityPolicy=$CPOLICY \
	-sProcessColorModel=DeviceRGB \
	-sColorConversionStrategy=RGB \
	-sOutputICCProfile="$ICCTMPFILE" \
	-sDEVICE=pdfwrite \
	-sOutputFile="$TMPOUTPUT" "$TMPFILE" $PSTMPFILE && \
run exiftool -overwrite_original \
	-AllDates=now \
	-Title="$PDFTITLE" \
	-Producer="$PDFCREATOR" \
	-pdf:Subject="$PDFSUBJECT" \
	-pdf:Keywords="$PDFKEYWORDS" \
	-pdf:Author="$PDFAUTHOR" \
	-pdf:Creator="$PDFCREATOR" \
	-xmp:Subject="$PDFKEYWORDS" \
	-xmp:Description="$PDFSUBJECT" \
	-xmp:Creator="$PDFAUTHOR" \
	-xmp:CreatorTool="$PDFCREATOR" \
	-q "$TMPOUTPUT" && \
cp "$TMPOUTPUT" "$OUTPUT"

do_finalize $? "$TMPOUTPUT"

rm -R "$TMPDIR"
