#!/bin/bash

source $(dirname $0)/pdf2common

PSFILE=$(mktemp -p /dev/shm/ XXXXXXXXXX.ps)
TMPFILE=$(mktemp -p /dev/shm/ XXXXXXXXXX.pdf)

OUTDIR=$(dirname "${OUTPUT}")
INFILE=$(basename "${INPUT}")

if [ "$1" == "" ]; then
	exit
fi
while [ "$1" != "" ]; do
	PARAM=`echo $1 | awk -F= '{print $1}'`
	VALUE=`echo $1 | awk -F= '{print $2}'`
	case $PARAM in
		-v | --version)
			echo $VERSION
			exit
			;;
		--debug)
			DEBUG=true
			MSGOPTS=""
			;;
		--good)
			DONE_FILE=$VALUE
			;;
		--bad)
			BAD_FILE=$VALUE
			;;
		--pass)
			PASS_FILE=$VALUE
			;;
		--validate)
			VALIDATE=$VALUE
			;;
		--mark)
			WATERMARK=$VALUE
			;;
		*.pdf)
			if [ "$INPUT" == "" ]; then
				INPUT=$PARAM
			elif [ "$OUTPUT" == "" ]; then
				OUTPUT=$PARAM
			else
				echo "ERROR: too many PDF files as input!"
				exit 1
			fi
			;;
		*)
			echo "ERROR: unknown parameter \"$PARAM\""
			exit 1
			;;
	esac
	shift
done

OUTDIR=$(dirname "${OUTPUT}")
INFILE=$(basename "${INPUT}")

if [ "$WATERMARK" == "" ]; then

	exit 1

fi

if [ ! -f "$INPUT" ]; then

	log_pass
	exit 1

fi

if [ ! -d "$OUTDIR" ]; then
	mkdir -p "$OUTDIR" && DIRMADE=true

	if [ $? != 0 ]; then
		log_bad

		rm "$PSFILE"
		rm "$TMPFILE"
		exit 1
	fi
fi

echo "%% Watermark ps file
/watermarkText { ($WATERMARK) } def
/watermarkFont { /TimesNewRomanBold 20 selectfont } def
/watermarkColor { 1 0 0 setrgbcolor } def
/watermarkAlpha { 0.5 .setfillconstantalpha } def
/watermarkAngle { 0 } def

/pageWidth { currentpagedevice /PageSize get 0 get } def
/pageHeight { currentpagedevice /PageSize get 1 get } def

<<
	/EndPage
	{
		2 eq { pop false }
		{
			gsave
			watermarkFont
			watermarkColor
			watermarkAlpha

			pageWidth pageHeight translate
			0 0 moveto
			watermarkText false charpath flattenpath pathbbox
			4 2 roll pop pop
			-5 -5 moveto

			watermarkAngle rotate
			-1 mul exch -1 mul exch
			rmoveto

			watermarkText show

			grestore
			true
		} ifelse
	} bind
>> setpagedevice" >> "$PSFILE"

run gs $MSGOPTS \
	-dBATCH -dNOPAUSE -dALLOWPSTRANSPARENCY -sDEVICE=pdfwrite \
	-sOutputFile="$TMPFILE" "$PSFILE" "$INPUT" && \
cp "$TMPFILE" "$OUTPUT"

do_finalize $? "$TMPFILE"

rm "$PSFILE"
rm "$TMPFILE"
